#textdomain rose-lib
###
### Definition of a single line text box.
###

#define _GUI_DRAW_BACKGROUND COLOR
	[rectangle]
		x = 0
		y = 0
		w = "(width)"
		h = "(height)"

		fill_color = {COLOR}

	[/rectangle]
#enddef

#
# Text antialiasing doesn't work as expected when rendering over a rectangle
# filled with an alpha < 255 color, so instead of using
# GUI__BACKGROUND_COLOR_ENABLED and GUI__BACKGROUND_COLOR_DISABLED for the
# textbox background, use fully opaque colors that correspond to the averages
# one would get with those two macros.
#
#define _GUI_TEXTBOX_BACKGROUND_ENABLED
	{_GUI_DRAW_BACKGROUND "250, 250, 250, 255"}
#enddef

#define _GUI_TEXTBOX_BACKGROUND_DISABLED
	{_GUI_DRAW_BACKGROUND {GUI__BACKGROUND_COLOR_DISABLED}}
#enddef

#define _GUI_DRAW_BORDER COLOR
	[rectangle]
		x = 0
		y = "(visible_y)"
		w = "(width)"
		h = "(visible_height)"

		# border_thickness = 3
		border_thickness = 1
		border_color = "55, 55, 55, 192"

	[/rectangle]

	# [rectangle]
	#	x = 1
	#	y = 1
	#	w = "(if(width < 2, 0, width - 2))"
	#	h = "(if(height < 2, 0, height - 2))"

	#	border_thickness = 1
	#	border_color = {COLOR}

	# [/rectangle]
#enddef

#define _GUI_DRAW_TEXT SIZE COLOR
	[rectangle]
		x = "(text_x_offset + selection_offset_x_i)"
		y = "(text_y_offset + selection_offset_y_i)"
		w = "(selection_width_i)"
		h = "(selection_height_i)"

		border_thickness = 0
		fill_color = "51, 153, 255, 255"
	[/rectangle]
	
	[rectangle]
		x = "(text_x_offset)"
		y = "(text_y_offset + selection_offset_y_i + selection_height_i)"
		w = "(text_maximum_width)"
		h = "(selection_height_ii)"

		border_thickness = 0
		fill_color = "51, 153, 255, 255"
	[/rectangle]
	
	[rectangle]
		x = "(text_x_offset)"
		y = "(text_y_offset + selection_offset_y_i + selection_height_i + selection_height_ii)"
		w = "(selection_width_iii)"
		h = "(selection_height_iii)"

		border_thickness = 0
		fill_color = "51, 153, 255, 255"
	[/rectangle]

	[text]
		x = "(text_x_offset)"
		y = "(text_y_offset)"
		w = "(text_width)"
		h = "(text_height)"
		maximum_width = "(text_maximum_width)"
		font_size = {SIZE}
		color = {COLOR}
		editable = "(text_editable)"
		text = "(text)"
	[/text]
#enddef

#define _GUI_DRAW_CURSOR X_OFFSET
	[line]
		x1 = "(text_x_offset + cursor_offset_x)"
		y1 = "(text_y_offset + cursor_offset_y)"
		x2 = "(text_x_offset + cursor_offset_x)"
		y2 = "(text_y_offset + cursor_offset_y + cursor_height)"
		color = "0, 0, 0, 255"
	[/line]
#enddef

#define _GUI_TEXT_VERTICALLY_CENTRED
	"(if(text_font_height <= height, (height - text_font_height) / 2, 0))"
#enddef

#define _GUI_RESOLUTION RESOLUTION DEFAULT_WIDTH HEIGHT X_OFFSET EXTRA_WIDTH FONT_SIZE Y_POSITION EXTRA_HEIGHT
	[resolution]

		{RESOLUTION}

		default_width = {DEFAULT_WIDTH}
		default_height = {HEIGHT}

		max_width = 0
		# max_height = {HEIGHT}
		max_height = 0

		text_font_size = {FONT_SIZE}
		text_x_offset = {X_OFFSET}
		text_y_offset =	{Y_POSITION}
		text_extra_width = {EXTRA_WIDTH}
		text_extra_height = {EXTRA_HEIGHT}

		[state_enabled]

			[draw]

				{_GUI_TEXTBOX_BACKGROUND_ENABLED}

				{_GUI_DRAW_BORDER ({GUI__FONT_COLOR_ENABLED__TITLE}) }

				{_GUI_DRAW_TEXT ({FONT_SIZE}) ({GUI__FONT_COLOR_ENABLED__DEFAULT}) }

			[/draw]

		[/state_enabled]

		[state_disabled]

			[draw]

				{_GUI_TEXTBOX_BACKGROUND_DISABLED}

  				{_GUI_DRAW_BORDER ({GUI__FONT_COLOR_DISABLED__TITLE}) }

  				{_GUI_DRAW_TEXT ({FONT_SIZE}) ({GUI__FONT_COLOR_DISABLED__DEFAULT}) }

			[/draw]

		[/state_disabled]

		[state_focussed]

			[draw]

				{_GUI_TEXTBOX_BACKGROUND_ENABLED}

				{_GUI_DRAW_BORDER ({GUI__FONT_COLOR_ENABLED__TITLE}) }

				{_GUI_DRAW_TEXT ({FONT_SIZE}) ({GUI__FONT_COLOR_ENABLED__DEFAULT}) }

				{_GUI_DRAW_CURSOR ({X_OFFSET}) }

			[/draw]

		[/state_focussed]

	[/resolution]

#enddef

[text_box_definition]
	id = "large"
	description = "Default text box"

	# Tiny gui sizes haven't been tested yet so might need some tuning.
	{_GUI_RESOLUTION ({GUI_TINY__RESOLUTION}) 56 32 5 10 ({GUI_TINY__FONT_SIZE__LARGER})  3 6}
	{_GUI_RESOLUTION ()                       76 40 5 10 ({GUI_NORMAL__FONT_SIZE__LARGE}) 4 8}

[/text_box_definition]

[text_box_definition]
	id = "default"
	description = "Default text box"

	# Tiny gui sizes haven't been tested yet so might need some tuning.
	{_GUI_RESOLUTION ({GUI_TINY__RESOLUTION}) 36 24 5 10 ({GUI_TINY__FONT_SIZE__LARGE})     3 6}
	{_GUI_RESOLUTION ()                       56 30 5 10 ({GUI_NORMAL__FONT_SIZE__DEFAULT}) 4 8}

[/text_box_definition]

[text_box_definition]
	id = "scroll_large"
	description = "Large scoll text box"

	# Tiny gui sizes haven't been tested yet so might need some tuning.
	{_GUI_RESOLUTION ({GUI_TINY__RESOLUTION}) 56 32 5 10 ({GUI_TINY__FONT_SIZE__LARGER})  5 10}
	{_GUI_RESOLUTION ()                       76 40 5 10 ({GUI_NORMAL__FONT_SIZE__LARGE}) 5 10}

[/text_box_definition]

[text_box_definition]
	id = "scroll_default"
	description = "Default scroll text box"

	# Tiny gui sizes haven't been tested yet so might need some tuning.
	{_GUI_RESOLUTION ({GUI_TINY__RESOLUTION}) 36 24 5 10 ({GUI_NORMAL__FONT_SIZE__DEFAULT})     5 10}
	{_GUI_RESOLUTION ()                       56 30 5 10 ({GUI_NORMAL__FONT_SIZE__LARGE}) 5 10}

[/text_box_definition]

#undef _GUI_RESOLUTION
#undef _GUI_DRAW_CURSOR
#undef _GUI_DRAW_TEXT
#undef _GUI_DRAW_BORDER
