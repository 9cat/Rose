#textdomain rose-lib
#
# Contains the macros for the default widgets.
# - Global GUI macros get the GUI prefix.
# - Local (pre file) GUI macros get the _GUI prefix and should be undefined at
#   the end of the file.
#
#
# For now only TINY and NORMAL gui will be defined, once this works SMALL gui
# will be added, need to see which parts need to change for that. Later there
# will also be definitions for larger screens, mainly for using the extra width
# better.


###############################################################################
###                                                                         ###
### Generic macros usable for all resolutions.                              ###
###                                                                         ###
###############################################################################

# Centers the text horizontally.
#
# If the text is too wide it returns the left side.
# Rounding happens to the left side.
#define GUI__TEXT_HORIZONTALLY_CENTRED
	"(if(text_width < width, (width - text_width ) / 2, 0))"
#enddef

# Centers the text vertically.
#
# If the text is too high it returns the top side.
# Rounding happens to the bottom side.
#define GUI__TEXT_VERTICALLY_CENTRED
	"(if(text_height < height, (height - text_height + 1) / 2, 0))"
#enddef

#define GUI__CENTERED_TEXT FONT_SIZE FONT_STYLE FONT_COLOR
	[text]
		x = {GUI__TEXT_HORIZONTALLY_CENTRED}
		y = {GUI__TEXT_VERTICALLY_CENTRED}
		w = "(text_width)"
		h = "(text_height)"
		font_size = {FONT_SIZE}
		font_style = {FONT_STYLE}
		color = {FONT_COLOR}
		text = "(text)"
	[/text]
#enddef

#define GUI__TEXT_VERTICALLY_BOTTOMED
	"(if(text_height < height, (height - text_height - 2), 0))"
#enddef

#define GUI__BOTTOMED_TEXT FONT_SIZE FONT_STYLE FONT_COLOR
	[text]
		x = {GUI__TEXT_HORIZONTALLY_CENTRED}
		y = {GUI__TEXT_VERTICALLY_BOTTOMED}
		w = "(text_width)"
		h = "(text_height)"
		font_size = {FONT_SIZE}
		font_style = {FONT_STYLE}
		color = {FONT_COLOR}
		text = "(text)"
	[/text]
#enddef

# This white color is used for most texts.
#define GUI__FONT_COLOR_ENABLED__DEFAULT
	"20, 20, 20, 255"
#enddef

# This gray color is used for most text when the widget is disabled.
#define GUI__FONT_COLOR_DISABLED__DEFAULT
	"128, 128, 128, 255"
#enddef

#define GUI__FONT_COLOR_FOCUS__DEFAULT
	"0, 0, 255, 255"
#enddef

#define GUI__FONT_COLOR_ENABLED__DUSK
	"230, 230, 230, 255"
#enddef

#define GUI__FONT_COLOR_DISABLED__DUSK
	"128, 128, 128, 255"
#enddef

#define GUI__FONT_COLOR_FOCUS__DUSK
	"0, 128, 255, 255"
#enddef

#define GUI__PAGE_COLOR__DEFAULT
	"210, 220, 210, 255"
#enddef

#define GUI__PURPLE_COLOR__DEFAULT
	"142, 68, 173, 255"
#enddef

# #define GUI__LISTBOX_COLOR__DEFAULT
#	"208, 255, 190, 255"
# #enddef

#define GUI__LISTBOX_COLOR__DEFAULT
	"255, 255, 255, 255"
#enddef

# This gold color is used for the
# - title labels
# - button captions
# - checkbox captions
# - menu captions
#define GUI__FONT_COLOR_ENABLED__TITLE
	{GUI__FONT_COLOR_ENABLED__DEFAULT}
#enddef

# This now uses the default disabled color but should be tiny bit lighter.
#define GUI__FONT_COLOR_DISABLED__TITLE
	{GUI__FONT_COLOR_DISABLED__DEFAULT}
#enddef

# This color is used as background in the listbox.
#define GUI__BACKGROUND_COLOR_ENABLED
	"230, 230, 230, 255"
#enddef

#define GUI__BACKGROUND_COLOR_DISABLED
	"200, 200, 200, 255"
#enddef

#define GUI__LISTBOX_SELECTED_CELL_BACKGROUND

	#main background 320 x 67
	[image]
		x = 0
		y = 0
		w = "(width)"
		h = "(height)"
		name = "buttons/selection3-background.png"
	[/image]

#enddef

#define GUI__FRAME_CELL
	# corners are 4x4
	[image]
		x = 0
		y = 0
		name = "buttons/border-topleft.png"
	[/image]

	[image]
		x = "(width - 6)"
		y = 0
		name = "buttons/border-topright.png"
	[/image]

	[image]
		x = 0
		y = "(height - 6)"
		name = "buttons/border-botleft.png"
	[/image]

	[image]
		x = "(width - 6)"
		y = "(height - 6)"
		name = "buttons/border-botright.png"
	[/image]

	# since the lines are already quite long scale them instead of stretching
	# the height of the lines is 3 pixels.
	[image]
		x = 6
		y = 0
		w = "(width - 12)"
		name = "buttons/border-top.png"
	[/image]

	[image]
		x = 6
		y = "(height - 6)"
		w = "(width - 12)"
		name = "buttons/border-bottom.png"
	[/image]

	[image]
		x = 0
		y = 6
		h= "(height - 12)"
		name = "buttons/border-left.png"
	[/image]

	[image]
		x = "(width - 6)"
		y = 6
		h = "(height - 12)"
		name = "buttons/border-right.png"
	[/image]
	
	[image]
		x = 6
		y = 6
		w = "(width - 12)"
		h = "(height - 12)"
		name = "buttons/border-background.png"
		resize_mode = "tile"
	[/image]
#enddef

#define GUI__CELL6 OFFSET_SIDE_1 OFFSET_SIDE_2 OFFSET_TOTAL X_OFFSET Y_OFFSET POSTFIX
	[image]
		x = {X_OFFSET}
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_1}
		name = "('buttons/' + border + '-topleft{POSTFIX}')"
	[/image]

	[image]
		x = "({OFFSET_SIDE_1} + {X_OFFSET})"
		y = {Y_OFFSET}
		w = "(if(width < ({OFFSET_TOTAL} + {X_OFFSET}), 0, width - {X_OFFSET} - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_1}
		resize_mode = "stretch"
		name = "('buttons/' + border + '-top{POSTFIX}')"
	[/image]

	[image]
		x = "(width - {OFFSET_SIDE_2})"
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_1}
		name = "('buttons/' + border + '-topright{POSTFIX}')"
	[/image]

	[image]
		x = "(width - {OFFSET_SIDE_2})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_2}
		h = "(if(height < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (height - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/' + border + '-right{POSTFIX}')"
	[/image]

	[image]
		x = "(width - {OFFSET_SIDE_2})"
		y = "(height - {OFFSET_SIDE_2})"
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_2}
		name = "('buttons/' + border + '-botright{POSTFIX}')"
	[/image]

	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "(height - {OFFSET_SIDE_2})"
		w = "(if(width < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (width - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_2}
		resize_mode = "stretch"
		name = "('buttons/' + border + '-bottom{POSTFIX}')"
	[/image]

	[image]
		x = {X_OFFSET}
		y = "(height - {OFFSET_SIDE_2})"
		name = "('buttons/' + border + '-botleft{POSTFIX}')"
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_2}
	[/image]

	[image]
		x = {X_OFFSET}
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_1}
		h = "(if(height < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (height - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/' + border + '-left{POSTFIX}')"
	[/image]
	
	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = "(if(width < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (width - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = "(if(height < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (height - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		name = "('buttons/' + border + '-background{POSTFIX}')"
	[/image]
#enddef

#define GUI__CELL7 OFFSET_SIDE_1 OFFSET_SIDE_2 OFFSET_TOTAL X_OFFSET Y_OFFSET STEM POSTFIX
	[image]
		x = {X_OFFSET}
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_1}
		name = "('buttons/{STEM}-topleft{POSTFIX}')"
	[/image]

	[image]
		x = "({OFFSET_SIDE_1} + {X_OFFSET})"
		y = {Y_OFFSET}
		w = "(if(width < ({OFFSET_TOTAL} + {X_OFFSET}), 0, width - {X_OFFSET} - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_1}
		resize_mode = "stretch"
		name = "('buttons/{STEM}-top{POSTFIX}')"
	[/image]

	[image]
		x = "(width - {OFFSET_SIDE_2})"
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_1}
		name = "('buttons/{STEM}-topright{POSTFIX}')"
	[/image]

	[image]
		x = "(width - {OFFSET_SIDE_2})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_2}
		h = "(if(height < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (height - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/{STEM}-right{POSTFIX}')"
	[/image]

	[image]
		x = "(width - {OFFSET_SIDE_2})"
		y = "(height - {OFFSET_SIDE_2})"
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_2}
		name = "('buttons/{STEM}-botright{POSTFIX}')"
	[/image]

	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "(height - {OFFSET_SIDE_2})"
		w = "(if(width < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (width - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_2}
		resize_mode = "stretch"
		name = "('buttons/{STEM}-bottom{POSTFIX}')"
	[/image]

	[image]
		x = {X_OFFSET}
		y = "(height - {OFFSET_SIDE_2})"
		name = "('buttons/{STEM}-botleft{POSTFIX}')"
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_2}
	[/image]

	[image]
		x = {X_OFFSET}
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_1}
		h = "(if(height < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (height - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/{STEM}-left{POSTFIX}')"
	[/image]
	
	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = "(if(width < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (width - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = "(if(height < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (height - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		name = "('buttons/{STEM}-background{POSTFIX}')"
	[/image]
#enddef

#define GUI__CELL6_OFF OFFSET_SIDE_1 OFFSET_SIDE_2 OFFSET_TOTAL X_OFFSET Y_OFFSET POSTFIX
	[image]
		x = {X_OFFSET}
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_1}
		name = "('buttons/' + border + '-topleft{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "({OFFSET_SIDE_1} + {X_OFFSET})"
		y = {Y_OFFSET}
		w = "(if(dwidth < ({OFFSET_TOTAL} + {X_OFFSET}), 0, dwidth - {X_OFFSET} - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_1}
		resize_mode = "stretch"
		name = "('buttons/' + border + '-top{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "(dwidth - {OFFSET_SIDE_2})"
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_1}
		name = "('buttons/' + border + '-topright{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "(dwidth - {OFFSET_SIDE_2})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_2}
		h = "(if(dheight < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (dheight - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/' + border + '-right{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "(dwidth - {OFFSET_SIDE_2})"
		y = "(dheight - {OFFSET_SIDE_2})"
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_2}
		name = "('buttons/' + border + '-botright{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "(dheight - {OFFSET_SIDE_2})"
		w = "(if(dwidth < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (dwidth - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_2}
		resize_mode = "stretch"
		name = "('buttons/' + border + '-bottom{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = {X_OFFSET}
		y = "(dheight - {OFFSET_SIDE_2})"
		name = "('buttons/' + border + '-botleft{POSTFIX}')"
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_2}
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = {X_OFFSET}
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_1}
		h = "(if(dheight < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (dheight - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/' + border + '-left{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]
	
	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = "(if(dwidth < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (dwidth - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = "(if(dheight < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (dheight - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		name = "('buttons/' + border + '-background{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]
#enddef

#define GUI__CELL7_OFF OFFSET_SIDE_1 OFFSET_SIDE_2 OFFSET_TOTAL X_OFFSET Y_OFFSET STEM POSTFIX
	[image]
		x = {X_OFFSET}
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_1}
		name = "('buttons/{STEM}-topleft{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "({OFFSET_SIDE_1} + {X_OFFSET})"
		y = {Y_OFFSET}
		w = "(if(width < ({OFFSET_TOTAL} + {X_OFFSET}), 0, dwidth - {X_OFFSET} - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_1}
		resize_mode = "stretch"
		name = "('buttons/{STEM}-top{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "(dwidth - {OFFSET_SIDE_2})"
		y = {Y_OFFSET}
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_1}
		name = "('buttons/{STEM}-topright{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "(dwidth - {OFFSET_SIDE_2})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_2}
		h = "(if(dheight < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (dheight - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/{STEM}-right{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "(dwidth - {OFFSET_SIDE_2})"
		y = "(dheight - {OFFSET_SIDE_2})"
		w = {OFFSET_SIDE_2}
		h = {OFFSET_SIDE_2}
		name = "('buttons/{STEM}-botright{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "(dheight - {OFFSET_SIDE_2})"
		w = "(if(dwidth < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (dwidth - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = {OFFSET_SIDE_2}
		resize_mode = "stretch"
		name = "('buttons/{STEM}-bottom{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = {X_OFFSET}
		y = "(dheight - {OFFSET_SIDE_2})"
		name = "('buttons/{STEM}-botleft{POSTFIX}')"
		w = {OFFSET_SIDE_1}
		h = {OFFSET_SIDE_2}
		hdpi_off = yes, yes, yes, yes
	[/image]

	[image]
		x = {X_OFFSET}
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = {OFFSET_SIDE_1}
		h = "(if(dheight < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (dheight - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		resize_mode = "stretch"
		name = "('buttons/{STEM}-left{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]
	
	[image]
		x = "({X_OFFSET} + {OFFSET_SIDE_1})"
		y = "({Y_OFFSET} + {OFFSET_SIDE_1})"
		w = "(if(dwidth < ({X_OFFSET} + {OFFSET_TOTAL}), 0, (dwidth - {X_OFFSET}) - {OFFSET_TOTAL}))"
		h = "(if(dheight < ({Y_OFFSET} + {OFFSET_TOTAL}), 0, (dheight - {Y_OFFSET}) - {OFFSET_TOTAL}))"
		name = "('buttons/{STEM}-background{POSTFIX}')"
		hdpi_off = yes, yes, yes, yes
	[/image]
#enddef
				
# Forces a wiget to be of a certain size.
# Depending of the flags of the parent widget the item will grow
#
# WIDTH                           Minimum width for the widget.
# HEIGHT                          Minimum height for the widget.
# WIDGET                          The widget to add into the item.
#
# eg instead of
#	[label]
#       # Note Foo has trailing spaces to force extra width.
#		label = "
#               Foo        
#               "
#	[label]
# you can do:
#
# {GUI_FORCE_WIDGET_MINIMUM_SIZE 150 75 (
#	[label]
#		label = "Foo"
#	[label]
# )}
#
#define GUI_FORCE_WIDGET_MINIMUM_SIZE WIDTH HEIGHT WIDGET
[stacked_widget]
	definition = "default"


		[layer]

			[row]

				[column]

					[spacer]
						definition = "default"
						width = "{WIDTH}"
						height = "{HEIGHT}"
					[/spacer]

				[/column]

			[/row]

		[/layer]

		[layer]

			[row]
				grow_factor = 1
				[column]
					grow_factor = 1
					horizontal_grow = "true"
					vertical_grow = "true"
					{WIDGET}
				[/column]

			[/row]

		[/layer]


[/stacked_widget]
#enddef

###############################################################################
###                                                                         ###
### Macros for the tiny gui.                                                ###
###                                                                         ###
###############################################################################

###
### wide screen
###

#define GUI_TINY__RESOLUTION
	window_width = 639
	window_height = 479
#enddef

#define GUI_VGA__RESOLUTION
	window_width = 799
	window_height = 599
#enddef

#define GUI_TINY__FONT_SIZE__TINY
	11
#enddef

#define GUI_TINY__FONT_SIZE__SMALL
	12
#enddef

#define GUI_TINY__FONT_SIZE__DEFAULT
	13
#enddef

#define GUI_TINY__FONT_SIZE__LARGE
	15
#enddef

#define GUI_TINY__FONT_SIZE__TITLE
	16
#enddef

#define GUI_TINY__FONT_SIZE__LARGER
	17
#enddef

###############################################################################
###                                                                         ###
### Macros for the normal gui.                                              ###
###                                                                         ###
###############################################################################

#define GUI_NORMAL__RESOLUTION
	window_width = 0
	window_height = 0
#enddef

#define GUI_NORMAL__FONT_SIZE__TINY
	12
#enddef

#define GUI_NORMAL__FONT_SIZE__SMALL
	14
#enddef

#define GUI_NORMAL__FONT_SIZE__DEFAULT
	16
#enddef

#define GUI_NORMAL__FONT_SIZE__LARGE
	17
#enddef

#define GUI_NORMAL__FONT_SIZE__LARGER
	18
#enddef

#define GUI_NORMAL__FONT_SIZE__TITLE
	18
#enddef

#define GUI_FONT_SIZE10
	10
#enddef

#define GUI_FONT_SIZE12
	12
#enddef
