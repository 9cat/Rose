#textdomain rose-lib

#define TIP__TEXT_HORIZONTALLY_CENTRED
	(if(text_width < width, (width - text_width ) / 2, 0))
#enddef

# Centers the text vertically.
#
# If the text is too high it returns the top side.
# Rounding happens to the bottom side.
#define TIP__TEXT_VERTICALLY_CENTRED
	(if(text_height < height, (height - text_height + 1) / 2, 0))
#enddef

#define TIP__CENTERED_TEXT FONT_SIZE FONT_STYLE FONT_COLOR
	[text]
		x = "({TIP__TEXT_HORIZONTALLY_CENTRED})"
		y = "({TIP__TEXT_VERTICALLY_CENTRED})"
		w = "(text_width)"
		h = "(text_height)"
		maximum_width = "(tip_text_maximum_width)"
		font_size = {FONT_SIZE}
		font_style = {FONT_STYLE}
		color = {FONT_COLOR}
		text = "(tip)"
	[/text]
#enddef

#define _GUI_TIP ID EXTRA_WIDTH EXTRA_HEIGHT VERTICAL_GAP FONT_SIZE FONT_COLOR
[tip_definition]
	id = {ID}
	
	text_extra_width = {EXTRA_WIDTH}
	text_extra_height = {EXTRA_HEIGHT}
	text_font_size = {FONT_SIZE}
	vertical_gap = {VERTICAL_GAP}
	
	{GUI__CELL7_OFF 6 6 12 0 0 "border2" ".png"}
	
	{TIP__CENTERED_TEXT ({FONT_SIZE}) () ({FONT_COLOR})}
[/tip_definition]	
#enddef

{_GUI_TIP "default"	   10    8    4    {GUI_NORMAL__FONT_SIZE__DEFAULT}    {GUI__FONT_COLOR_ENABLED__DEFAULT} }